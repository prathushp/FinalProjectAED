package FrontEnd;
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

import Backend.Appointment;
import Backend.CustomerData;
import Backend.Email;
import Backend.HealthPricing;
import Backend.JdbcConnection;
import Backend.PetPricing;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author prath
 */
public class PetClaim extends javax.swing.JFrame {

    /**
     * Creates new form PetClaim
     */
    Connection conn;
    PreparedStatement pst,pst1,pst2,pst3;
    ResultSet rs;
    ArrayList<PetPricing> petP = new ArrayList<>();
    ArrayList<CustomerData> cus = new ArrayList<>();
    ArrayList<Appointment> app = new ArrayList<>();
    ArrayList<Email> e = new ArrayList<>();
    public PetClaim() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        pettable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jDateChooser4 = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        jRadioButton4 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        petname = new javax.swing.JTextField();
        breedtxt = new javax.swing.JTextField();
        zipcodetxt = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        finalpremium = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        brokeridtxt = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        timetxt = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        companytxt = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        customer_id = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        pettable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Company", "Cutomer ID", "Pet's name", "Species", "Sex", "Pet's breed", "Pet's age", "Zip code", "Premium", "Sales Broker"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(pettable);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 48)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/FrontEnd/pets (2).png"))); // NOI18N
        jLabel1.setText("Pet Insurance");

        jLabel13.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel13.setText("Date of appointment");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setText("Pet's Name");

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setText("Species");

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jRadioButton2.setText("Cat");

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jRadioButton1.setText("Dog");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setText("Sex");

        buttonGroup2.add(jRadioButton4);
        jRadioButton4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jRadioButton4.setText("Male");
        jRadioButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton4ActionPerformed(evt);
            }
        });

        buttonGroup2.add(jRadioButton3);
        jRadioButton3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jRadioButton3.setText("Female");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setText("Pet's breed");

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setText("Pet's age");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0-6 months", "6-12 months", "1-3 years", "3-5 years", "5-7 years", "7-9 years", "9+ years" }));

        jLabel7.setBackground(new java.awt.Color(255, 204, 204));
        jLabel7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel7.setText("Zipcode");

        zipcodetxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zipcodetxtActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jButton1.setText("Get Premium");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel10.setText("Your premium is");

        jButton3.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jButton3.setText("Buy Policy");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jButton2.setText("Get Appointment");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel8.setText("Sales Broker Id");

        jLabel9.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel9.setText("Time");

        timetxt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "10:30 am", "11:30 am", "12:30 pm", "13:30 pm", "14:30 pm", "15:30 pm", "16:30 pm", "17:30 pm", "18:30 pm" }));

        jLabel12.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel12.setText("Company");

        companytxt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Geico", "AllState", "Progressive", "StateFarm" }));

        jLabel14.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel14.setText("Customer ID");

        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton4.setText("Back");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                            .addComponent(timetxt, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel13)
                            .addGap(18, 18, 18)
                            .addComponent(jDateChooser4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel6))))
                            .addGap(50, 50, 50)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(breedtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(zipcodetxt, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel14)
                                            .addGap(61, 61, 61)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(69, 69, 69)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(petname, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(customer_id, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(companytxt, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel3)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jRadioButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(42, 42, 42)
                                .addComponent(jRadioButton2))
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jRadioButton4)
                                .addGap(49, 49, 49)
                                .addComponent(jRadioButton3))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addGap(42, 42, 42)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(brokeridtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 575, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(finalpremium, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(618, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(210, 210, 210)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(216, 216, 216))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel12)
                    .addComponent(companytxt, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(customer_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(petname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jRadioButton1)
                            .addComponent(jRadioButton2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jRadioButton4)
                            .addComponent(jRadioButton3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(breedtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(zipcodetxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jDateChooser4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(timetxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(brokeridtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(finalpremium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jButton3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addContainerGap(406, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jRadioButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton4ActionPerformed

    public void appointment(String company,String cust_id,String app_date ,String reason, String time) throws SQLException{
    try {
            JdbcConnection jdbc = new JdbcConnection();
            Connection conn = jdbc.Connect();    
                
                
            pst3 = conn.prepareStatement("SELECT company,cust_id ,reason ,date_of_app ,time FROM appointment");
            
            rs = pst3.executeQuery();
            
            while(rs.next())
            {
                String comp = rs.getString("company");
                String cus_id =  rs.getString("cust_id");
                String r = rs.getString("reason");
                String date_of_app =  rs.getString("date_of_app");
                String t = rs.getString("time");
                app.add(new Appointment(cust_id,r,date_of_app,t));
                
                

            }
            
            
        }
        catch (SQLException ex) {
            Logger.getLogger(PetClaim.class.getName()).log(Level.SEVERE, null, ex);

        }
    for (int i =0; i < app.size();i++) {
            if (app.get(i).getDate_of_app().equalsIgnoreCase(app_date) && app.get(i).getTime().equalsIgnoreCase(time))
            {

                JOptionPane.showMessageDialog(this,
                    "Appointment is booked by someone please choose another date or time",
                    "Try again",
                    JOptionPane.ERROR_MESSAGE);
                
            }
            
        }
        
    try{
         JdbcConnection jdbc = new JdbcConnection();
            Connection conn = jdbc.Connect();    
                
    
            pst= conn.prepareStatement("INSERT INTO appointment(company,cust_id,reason,date_of_app,time)VALUES(?,?,?,?,?)");

            pst.setString(1,company);
            pst.setString(2,cust_id);
            pst.setString(3, reason);
            pst.setString(4,app_date);
            pst.setString(5, time);
            int k = pst.executeUpdate();
            if (k==1){
                JOptionPane.showMessageDialog(this, "Appointment booked Successfully !!!");
                
//                pd.add(new PatientDirectory(Fname,Lname,patient_id,gender,date1,blood_group,address,zipcode,city,username,passw));
//                SystemPatient sp = new SystemPatient();
//                sp.patient_reg(pd);
            }
            
            } catch (SQLException ex) {
            Logger.getLogger(PetClaim.class.getName()).log(Level.SEVERE, null, ex);
            
        }
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) pettable.getModel();
        
        
        try {
            JdbcConnection jdbc = new JdbcConnection();
            Connection conn = jdbc.Connect();    
                
                
            pst1 = conn.prepareStatement("SELECT * from PetPricing");
            
            rs = pst1.executeQuery();
            
            while(rs.next())
            {
                int base_premium = rs.getInt("base_premium");
                int pet_dog =  rs.getInt("pet_dog");
                int pet_cat = rs.getInt("pet_cat");
                int female = rs.getInt("female");
                int male = rs.getInt("male");
                int age_0_6_months =  rs.getInt("age_0_6_months");
                int age_6_12_months = rs.getInt("age_6_12_months");      
                int age_1_3_years=  rs.getInt("age_1_3_years");
                int age_3_5_years = rs.getInt("age_3_5_years"); 
                int age_5_7_years = rs.getInt("age_5_7_years");
                int age_7_9_years = rs.getInt("age_7_9_years");
                int age_9plus_years = rs.getInt("age_9plus_years");
                String company = rs.getString("company");
                
                petP.add(new PetPricing(base_premium, pet_dog, pet_cat, female, male, age_0_6_months, age_6_12_months, age_1_3_years, age_3_5_years, age_5_7_years, age_7_9_years, age_9plus_years,company ));
                
            }
        }
        catch (SQLException ex) {
            Logger.getLogger(PetClaim.class.getName()).log(Level.SEVERE, null, ex);

        }
        
        int premium = 0;
        String com_name = companytxt.getSelectedItem().toString();
        String cust_id = customer_id.getText();
        String pet_name = petname.getText();
        String species = "";
            
        if(jRadioButton1.isSelected() == true)
        {
            species = "Dog";
        }
        if(jRadioButton2.isSelected() == true){
            species = "Cat";
        }
        
        String sex = "";
        if(jRadioButton4.isSelected() == true)
        {
            sex = "Male";
        }
        if(jRadioButton3.isSelected() == true){
            sex = "Female";
        }
        
        String breed = breedtxt.getText();
        
        String pet_age=jComboBox1.getSelectedItem().toString();
        /*if((jComboBox1.getSelectedItem().toString())=="0-6 months")
                {
                    pet_age = "0-6 months";
                }
        else if(jComboBox1.getSelectedItem().toString())=="6-12 months") */
        
        String zipcode = zipcodetxt.getText();
        String broker_id = brokeridtxt.getText();
        
        if(companytxt.getSelectedItem().toString().equalsIgnoreCase("Geico")){
            premium = premium + petP.get(0).getBase_premium();
            premium = premium + petP.get(0).getPet_dog();
            premium = premium + petP.get(0).getPet_cat();
            if(species=="Dog")
            {
                premium = premium + petP.get(0).getPet_dog();
            }
            else 
            {
                premium = premium + petP.get(0).getPet_cat();
            }
            
            if(sex=="Female")
            {
                premium = premium + petP.get(0).getFemale();
            }
            else
            {
                premium = premium + petP.get(0).getMale();
            }
            
            if(pet_age=="0-6 months")
            {
                premium = premium + petP.get(0).getAge_0_6_months();
            }
            else if(pet_age=="6-12 months")
            {
                premium = premium + petP.get(0).getAge_6_12_months();
            }
            else if(pet_age=="1-3 years")
            {
                premium = premium + petP.get(0).getAge_1_3_years();
            }
            else if(pet_age=="3-5 years")
            {
                premium = premium + petP.get(0).getAge_3_5_years();
            }
            else if (pet_age=="5-7 years")
            {
                premium = premium + petP.get(0).getAge_5_7_years();
            }
            else if (pet_age=="7-9 years")
            {
                premium = premium + petP.get(0).getAge_9plus_years();
            }
            else if(pet_age=="9+ years")
            {
                premium = premium + petP.get(2).getAge_9plus_years();
            }
            else
            {
                JOptionPane.showMessageDialog(this,
                        "Please select all the fields",
                        "Try again",
                        JOptionPane.ERROR_MESSAGE);
            }
            
        }
        
        else if(companytxt.getSelectedItem().toString().equalsIgnoreCase("AllState")){
            premium = premium + petP.get(1).getBase_premium();
            premium = premium + petP.get(1).getPet_dog();
            premium = premium + petP.get(1).getPet_cat();
            if(species=="Dog")
            {
                premium = premium + petP.get(1).getPet_dog();
            }
            else 
            {
                premium = premium + petP.get(1).getPet_cat();
            }
            
            if(sex=="Female")
            {
                premium = premium + petP.get(1).getFemale();
            }
            else
            {
                premium = premium + petP.get(1).getMale();
            }
            
            if(pet_age=="0-6 months")
            {
                premium = premium + petP.get(1).getAge_0_6_months();
            }
            else if(pet_age=="6-12 months")
            {
                premium = premium + petP.get(1).getAge_6_12_months();
            }
            else if(pet_age=="1-3 years")
            {
                premium = premium + petP.get(1).getAge_1_3_years();
            }
            else if(pet_age=="3-5 years")
            {
                premium = premium + petP.get(1).getAge_3_5_years();
            }
            else if (pet_age=="5-7 years")
            {
                premium = premium + petP.get(1).getAge_5_7_years();
            }
            else if(pet_age=="9+ years")
            {
                premium = premium + petP.get(1).getAge_9plus_years();
            }
            else
            {
                JOptionPane.showMessageDialog(this,
                        "Please select all the fields",
                        "Try again",
                        JOptionPane.ERROR_MESSAGE);
            }
        }
        
        else if (jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Progressive")){
            premium = premium + petP.get(2).getBase_premium();
            premium = premium + petP.get(2).getPet_dog();
            premium = premium + petP.get(2).getPet_cat();
            if(species=="Dog")
            {
                premium = premium + petP.get(2).getPet_dog();
            }
            else 
            {
                premium = premium + petP.get(2).getPet_cat();
            }
            
            if(sex=="Female")
            {
                premium = premium + petP.get(2).getFemale();
            }
            else
            {
                premium = premium + petP.get(2).getMale();
            }
            
            if(pet_age=="0-6 months")
            {
                premium = premium + petP.get(2).getAge_0_6_months();
            }
            else if(pet_age=="6-12 months")
            {
                premium = premium + petP.get(2).getAge_6_12_months();
            }
            else if(pet_age=="1-3 years")
            {
                premium = premium + petP.get(2).getAge_1_3_years();
            }
            else if(pet_age=="3-5 years")
            {
                premium = premium + petP.get(2).getAge_3_5_years();
            }
            else if (pet_age=="5-7 years")
            {
                premium = premium + petP.get(2).getAge_5_7_years();
            }
            else if (pet_age=="7-9 years")
            {
                premium = premium + petP.get(2).getAge_9plus_years();
                
            }
            else if(pet_age=="9+ years")
            {
                premium = premium + petP.get(2).getAge_9plus_years();
            }
            else
            {
                JOptionPane.showMessageDialog(this,
                        "Please select all the fields",
                        "Try again",
                        JOptionPane.ERROR_MESSAGE);
            }
        }
        
      
        else
        {
            premium = premium + petP.get(3).getBase_premium();
            //premium = premium + petP.get(3).getPet_dog();
            //premium = premium + petP.get(3).getPet_cat();
            
            
            if(species=="Dog")
            {
                premium = premium + petP.get(3).getPet_dog();
            }
            else 
            {
                premium = premium + petP.get(3).getPet_cat();
            }
            
            if(sex=="Female")
            {
                premium = premium + petP.get(3).getFemale();
            }
            else
            {
                premium = premium + petP.get(3).getMale();
            }
            
            if(pet_age=="0-6 months")
            {
                premium = premium + petP.get(3).getAge_0_6_months();
            }
            else if(pet_age=="6-12 months")
            {
                premium = premium + petP.get(3).getAge_6_12_months();
            }
            else if(pet_age=="1-3 years")
            {
                premium = premium + petP.get(3).getAge_1_3_years();
            }
            else if(pet_age=="3-5 years")
            {
                premium = premium + petP.get(3).getAge_3_5_years();
            }
            else if (pet_age=="5-7 years")
            {
                premium = premium + petP.get(3).getAge_5_7_years();
            }
            else if (pet_age=="7-9 years")
            {
                premium = premium + petP.get(3).getAge_9plus_years();
            }
            else if(pet_age=="9+ years")
            {
                premium = premium + petP.get(3).getAge_9plus_years();
            }
            else 
            {
                JOptionPane.showMessageDialog(this,
                        "Please select all the fields",
                        "Try again",
                        JOptionPane.ERROR_MESSAGE);
            }
        }
        
        
        String final_premium = "$"+premium;
        finalpremium.setText(final_premium);
        
        model.addRow(new Object[]{ cust_id, pet_name, species,sex,breed, pet_age, zipcode, final_premium, broker_id, com_name});

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
        /*DefaultTableModel tModel = (DefaultTableModel) pettable.getModel();
        String cust_id = tModel.getValueAt(pettable.getSelectedRow(), 0).toString();
        String pet_name = tModel.getValueAt(pettable.getSelectedRow(), 1).toString();
        String species = tModel.getValueAt(pettable.getSelectedRow(), 2).toString();
        String sex = tModel.getValueAt(pettable.getSelectedRow(), 3).toString();
        String breed = tModel.getValueAt(pettable.getSelectedRow(), 4).toString();
        //Date  =(Date) tModel.getValueAt(jTable1.getSelectedRow(), 4);
        String age = tModel.getValueAt(pettable.getSelectedRow(), 5).toString();
        String zipcode = tModel.getValueAt(pettable.getSelectedRow(), 6).toString();
        String premium = tModel.getValueAt(pettable.getSelectedRow(), 7).toString();
        String sales_broker = tModel.getValueAt(pettable.getSelectedRow(), 8).toString();
        String company = tModel.getValueAt(pettable.getSelectedRow(), 9).toString();
        
        try{
         JdbcConnection jdbc = new JdbcConnection();
            Connection conn = jdbc.Connect();    
                
    
            pst= conn.prepareStatement("INSERT INTO managepetpolicies(cust_id,pet_name,species,sex,breed,age,zipcode,premium,sales_broker,company)VALUES(?,?,?,?,?,?,?,?,?,?)");

            pst.setString(1,cust_id);
            pst.setString(2,pet_name);
            pst.setString(3, species);
            pst.setString(4,sex);
            pst.setString(5, breed);
            pst.setString(6, age);
            pst.setString(7, zipcode);
            pst.setString(8, premium);
            pst.setString(9, sales_broker);
            pst.setString(10, company);
            
            
            int k = pst.executeUpdate();
            if (k==1){
                JOptionPane.showMessageDialog(this, "Appointment booked Successfully !!!");
                
//                pd.add(new PatientDirectory(Fname,Lname,patient_id,gender,date1,blood_group,address,zipcode,city,username,passw));
//                SystemPatient sp = new SystemPatient();
//                sp.patient_reg(pd);
            }
            
            } catch (SQLException ex) {
            Logger.getLogger(HealthClaim.class.getName()).log(Level.SEVERE, null, ex); */
            try{
                JdbcConnection jdbc = new JdbcConnection();
                Connection conn = jdbc.Connect();    
                
    
                pst= conn.prepareStatement("INSERT INTO ManagePetPolicies(custID,petname,species,sex,breed,age,zip_code,premium,salesbroker_id,company)VALUES(?,?,?,?,?,?,?,?,?,?)");
                int r = pettable.getSelectedRow();
                if (r < 0)
                {
                    JOptionPane.showMessageDialog(this, "Please select a row", "Select row", JOptionPane.ERROR_MESSAGE);
                } 
                else {
            DefaultTableModel tModel = (DefaultTableModel) pettable.getModel();
            String cust_id = tModel.getValueAt(pettable.getSelectedRow(), 0).toString();
            String pet_name = tModel.getValueAt(pettable.getSelectedRow(), 1).toString();
            String species = tModel.getValueAt(pettable.getSelectedRow(), 2).toString();
            String sex = tModel.getValueAt(pettable.getSelectedRow(), 3).toString();
            String breed = tModel.getValueAt(pettable.getSelectedRow(), 4).toString();
            //Date  =(Date) tModel.getValueAt(jTable1.getSelectedRow(), 4);
            String age = tModel.getValueAt(pettable.getSelectedRow(), 5).toString();
            String zipcode = tModel.getValueAt(pettable.getSelectedRow(), 6).toString();
            String premium = tModel.getValueAt(pettable.getSelectedRow(), 7).toString();
            String sales_broker = tModel.getValueAt(pettable.getSelectedRow(), 8).toString();
            String company = tModel.getValueAt(pettable.getSelectedRow(), 9).toString();
        
            pst.setString(1,cust_id);
            pst.setString(2,pet_name);
            pst.setString(3, species);
            pst.setString(4,sex);
            pst.setString(5, breed);
            pst.setString(6, age);
            pst.setString(7, zipcode);
            pst.setString(8, premium);
            pst.setString(9, sales_broker);
            pst.setString(10, company);
            
            
            int k = pst.executeUpdate();
            if (k==1){
                JOptionPane.showMessageDialog(this, "Policy bought successfully !");
                
//                pd.add(new PatientDirectory(Fname,Lname,patient_id,gender,date1,blood_group,address,zipcode,city,username,passw));
//                SystemPatient sp = new SystemPatient();
//                sp.patient_reg(pd);

            String email="" ;
            
            pst2 = conn.prepareStatement("SELECT email from CustomerRegistration where cust_id = ?");

            pst2.setString(1,cust_id);
            rs = pst2.executeQuery();
            
            while(rs.next())
            {
               email = rs.getString("email");
            }
                try {
                    Emailfunctionality.newpolicy.sendMail(email);
                } catch (Exception ex) {
                    Logger.getLogger(PetClaim.class.getName()).log(Level.SEVERE, null, ex);
                } 
            
            } 
                }}
            catch (SQLException ex) {
            Logger.getLogger(PetClaim.class.getName()).log(Level.SEVERE, null, ex);
        }   
                           
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String com_name = companytxt.getSelectedItem().toString();
        String cust_id = customer_id.getText();
        String reason = "Pet insurance claim";
        String time = timetxt.getSelectedItem().toString();
        Date DOB = (Date)jDateChooser4.getDate();
        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        final String stringDate = dateFormat.format(DOB);
            
        try {
            appointment(com_name,cust_id,stringDate, reason, time);
        } catch (SQLException ex) {
            Logger.getLogger(PetClaim.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void zipcodetxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zipcodetxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_zipcodetxtActionPerformed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        InformAndClaim co = new InformAndClaim();
        co.show();
        dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PetClaim.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PetClaim.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PetClaim.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PetClaim.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PetClaim().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField breedtxt;
    private javax.swing.JTextField brokeridtxt;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox<String> companytxt;
    private javax.swing.JTextField customer_id;
    private javax.swing.JTextField finalpremium;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox<String> jComboBox1;
    private com.toedter.calendar.JDateChooser jDateChooser4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField petname;
    private javax.swing.JTable pettable;
    private javax.swing.JComboBox<String> timetxt;
    private javax.swing.JTextField zipcodetxt;
    // End of variables declaration//GEN-END:variables
}
